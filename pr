- For the derivation of WriteLike, if I don't hardcode the `Output` type the compiler can't find the `Monoid[Output]`. This implies having to write some code for eath `JsValue`, `UrlFormEncoded`, ..., do you think that's acceptable?

- Would people be interested in coproduct derivation? See example with `"$type": "Animal"` in the Json.

- I think there is an important tradeoff to consider about how much control/granularity we want to give to the user, vs the simplicity of the derivation interface. Let me show the two extrems to illustrate the tradeoff.

    1. We only expose one object, `Derive`, such that `import Derive._` enables the derivation of any herarchy of case classes.
    
    2. We expose `DeriveProduct` which behaves exacltly like the current macros,

- 
